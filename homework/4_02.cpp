#include<iostream>using namespace std;class Student {private:	int num;	char name[20];	static int total;//静态变量，放在public下public:	static void print();	Student() {		total++;	}	~Student() {		total--;	}	Student(int n, char *p = "wang");	void GetName();	int Getnum();};int Student::total = 0;//初始化totalStudent::Student(int n, char* p) {	num = n;	strcpy(name, p);	total++;}void Student::GetName() {	cout << "the name  of Student is" << name << endl;}int Student::Getnum() {	cout << "  the num of student is" << num << endl;	return num;}void Student::print() {	cout << "the number of students:" << total << endl;}int main(){	Student::print();	//用类名调用静态对象， 0	Student *p = new Student(13);	//调用一次构造函数 total+1	Student::print();	//total=1	         //p->print();       	    //利用对象的指针访问静态变量 1	delete p;	//调用析构函数 total-1	Student::print();	//=0	p->print();	Student s[2];	Student::print();	//1	s[1].print();//2	system("pause");	return 0;}